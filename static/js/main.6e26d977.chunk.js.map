{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.js","components/ContactForm/ContactForm .js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList .js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","ContactForm","state","name","number","changeHandler","e","target","value","setState","submitHandler","preventDefault","contact","id","uuidv4","props","addContact","reset","this","onSubmit","contactForm","htmlFor","type","placeholder","onChange","pattern","disabled","length","Component","ContactListItem","deleteContactbyId","contactLi","contactLiP","onClick","contactLiBtn","ContactList","contacts","map","key","style","display","Filter","App","filter","updatedContacts","newName","toLowerCase","includes","trim","alert","filterContactsByName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e26d977.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLi\":\"ContactListItem_contactLi__1UI1a\",\"contactLiP\":\"ContactListItem_contactLiP__eIkEu\",\"contactLiBtn\":\"ContactListItem_contactLiBtn__3Jj5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3AAYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3pQme\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.submitHandler} className={styles.contactForm}>\r\n        <label htmlFor=\"nameInput\">\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.changeHandler}\r\n            id=\"nameInput\"\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"numberInput\">\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n            placeholder=\"xxx-xxx-xxxx\"\r\n            onChange={this.changeHandler}\r\n            id=\"numberInput\"\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={name.length && number.length ? false : true}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ contact, deleteContactbyId }) => {\r\n  const deleteContact = () => {\r\n    deleteContactbyId(contact.id);\r\n  };\r\n  return (\r\n    <li className={styles.contactLi}>\r\n      <p className={styles.contactLiP}>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        onClick={deleteContact}\r\n        className={styles.contactLiBtn}\r\n      >\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  deleteContactbyId: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, deleteContactbyId }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.length ? (\r\n        contacts.map((contact) => (\r\n          <ContactListItem\r\n            key={contact.id}\r\n            contact={contact}\r\n            deleteContactbyId={deleteContactbyId}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>no contact with such name in your phone </p>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired\r\n  ).isRequired,\r\n  deleteContactbyId: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst style = {\r\n  display: \"block\",\r\n};\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <label htmlFor=\"filterInput\">\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        style={style}\r\n        id=\"filterInput\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport Section from \"./Section/Section\";\nimport ContactForm from \"./ContactForm/ContactForm \";\nimport ContactList from \"./ContactList/ContactList \";\nimport Filter from \"./Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  deleteContactbyId = (id) => {\n    const { contacts } = this.state;\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\n    this.setState({\n      contacts: [...updatedContacts],\n    });\n  };\n\n  addContact = (contact) => {\n    const newName = contact.name;\n    const names = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (names.includes(newName.toLowerCase().trim())) {\n      alert(`${newName} is already in contact list`);\n    } else {\n      this.setState((state) => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  filterContactsByName = () => {\n    const { contacts, filter } = this.state;\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm addContact={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length > 1 && <Filter onChange={this.changeHandler} />}\n          <ContactList\n            contacts={this.filterContactsByName()}\n            deleteContactbyId={this.deleteContactbyId}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}